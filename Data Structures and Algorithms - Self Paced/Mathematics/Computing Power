Computing Power

Naive Solution 

int power(int x, int n)
{
	int res = 1 ;

	for( int i =0 ; i < n; i ++ )
	{
	 	res = res * x;
	}

	return res;
}

Time Complexity: Theta(n)

---------------------------------------------------------------

power(x, n) = >

if n%2 == 0
	power(x, n/2) * power( x, n/2)
else
	power(x, n-1) * x

---------------------------------------------------------------

Efficient Solution 

int power(int x, int n)
{
	if( n == 0 )
	{
	return 1;
	}

	int temp = power(x,n/2);

	temp = temp * temp;

	if( n%2 == 0 )
		return temp;
	else
		return temp * x;
}

Time Complexity: 

T(n) = T( [n/2]) + Theta(1)
